<div class="container">
<br>
<hr>
 <h2> Sales per Month for <%= Date.today.year %> </h2>  
 <hr>
        <br>
        <% @data = []
        @labels = []
        i = 0
        @sales_by_month.each do |sale|
            if sale.month.year == Date.today.year  
            @data << sale.sales
            @labels << sale.month.strftime("%B")
            end
        end %>

        <canvas id="currentYearSales" ></canvas>
        <script>
        function float2dollar(value){
        return "$"+(value).toFixed(0).replace(/\d(?=(\d{3})+\.)/g, '$&,');
        }
        var array = <%= @data.inspect.html_safe %>;
        var labels = <%= @labels.inspect.html_safe %>;
        var ctx = document.getElementById('currentYearSales').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Sales',
                    data: array ,
                    backgroundColor: [
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(153, 102, 255, 0.2)'
                    ],
                    borderColor: [
                        'rgba(153, 102, 255, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(153, 102, 255, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                legend: {
                position: 'right'
                 },
                 tooltips: {
                     callbacks: {
                 label: function(tooltipItem, data) {
                
                    return '$' + tooltipItem.yLabel + ".00";
                }
             }
                    
                 },
                scales: {
                    yAxes: [{
                        scaleLabel: {
                        display: true,
                        labelString: 'Amount'
                        },
                        ticks: {
                            beginAtZero: true,
                            callback: function(value, index, values) {
                            return float2dollar(value);
                        }
                        }

                    }],
                    xAxes: [{
                        scaleLabel: {
                        display: true,
                        labelString: 'Month'
                        },  
                    }]
                }
            }
        });
        </script>

    <br>
    <hr>
    <h2> Sales per Month for <%= Date.today.last_year.year %> </h2>  
    <hr>
<br>
<% @data = []
@labels = []
i = 0
@sales_by_month.each do |sale|
    if sale.month.year == Date.today.last_year.year  
    @data << sale.sales
    @labels << sale.month.strftime("%B")
    end
end %>

<canvas id="previousYearSales" width="400" height="200"></canvas>
<script>
function float2dollar(value){
    return "$"+(value).toFixed(0).replace(/\d(?=(\d{3})+\.)/g, '$&,');
        }
var array = <%= @data.inspect.html_safe %>;
var labels = <%= @labels.inspect.html_safe %>;
var ctx = document.getElementById('previousYearSales').getContext('2d');
var myChart = new Chart(ctx, {
    type: 'bar',
    data: {
        labels: labels,
        datasets: [{
            label: 'Sales',
            data: array ,
            backgroundColor: [
                'rgba(153, 102, 255, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(153, 102, 255, 0.2)'
            ],
            borderColor: [
                'rgba(153, 102, 255, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(153, 102, 255, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
        legend: {
        position: 'right'
         },
         tooltips: {
             
             callbacks: {
                 label: function(tooltipItem, data) {
                
                    return '$' + tooltipItem.yLabel + ".00";
                }
             }
         },
        scales: {
            yAxes: [{
                scaleLabel: {
                display: true,
                labelString: 'Amount'
                },
                ticks: {
                    beginAtZero: true,
                    callback: function(value, index, values) {
                            return float2dollar(value);
                }
                }
               
            }],
            xAxes: [{
                scaleLabel: {
                display: true,
                labelString: 'Month'
                },  
            }]
        }
    }
});
</script>
<hr>
         <a href="#" class="btn btn-outline-secondary">Back To Top</a>
<br> 
</div>